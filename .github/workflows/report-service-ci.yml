name: Report Service CI

on:
  push:
    branches: [main]
    paths:
      - 'python/rinna/reports/**'
      - 'python/rinna/api/**'
      - 'python/tests/**/test_report*.py'
      - 'requirements.txt'
      - 'python/Dockerfile*'
      - 'python/docker-compose.yml'
      - '.github/workflows/report-service-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'python/rinna/reports/**'
      - 'python/rinna/api/**'
      - 'python/tests/**/test_report*.py'
      - 'requirements.txt'
      - 'python/Dockerfile*'
      - 'python/docker-compose.yml'
      - '.github/workflows/report-service-ci.yml'

jobs:
  test:
    name: Test Report Service
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and run tests
        run: |
          # Build the test container
          docker-compose -f python/docker-compose.yml build python-tests
          
          # Run the report-specific tests
          docker-compose -f python/docker-compose.yml run \
            --rm \
            report-tests
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: |
            test-output/
            coverage/
  
  build:
    name: Build Report Service Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build production image
        run: |
          # Build the production image
          docker-compose -f python/docker-compose.yml build report-service
      
      - name: Run service health check
        run: |
          # Start the service
          docker-compose -f python/docker-compose.yml up -d report-service
          
          # Wait for the service to be ready
          echo "Waiting for service to be ready..."
          timeout 30 bash -c 'until curl -s http://localhost:5001/health | grep -q "ok"; do sleep 1; done'
          
          # Test API endpoints
          echo "Testing API endpoints..."
          curl -s http://localhost:5001/api/v1/metrics/sample | jq .
          
          # Stop the service
          docker-compose -f python/docker-compose.yml down
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push image to registry
        if: github.event_name != 'pull_request'
        run: |
          # Tag and push the image
          docker tag rinna-report-service:latest ghcr.io/${{ github.repository_owner }}/rinna-report-service:latest
          docker push ghcr.io/${{ github.repository_owner }}/rinna-report-service:latest
          
          # Also tag with commit SHA
          docker tag rinna-report-service:latest ghcr.io/${{ github.repository_owner }}/rinna-report-service:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/rinna-report-service:${{ github.sha }}