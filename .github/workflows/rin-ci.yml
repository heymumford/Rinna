name: Rinna CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  rin-ci:
    name: Rinna CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          # Install Maven
          sudo apt-get update
          sudo apt-get install -y maven
          
          # Install Python dependencies
          if [ -f "config/python/requirements-dev.txt" ]; then
            pip install -r config/python/requirements-dev.txt
          fi
          # Install the package in development mode if setup.py exists
          if [ -f "python/setup.py" ]; then
            pip install -e python/
          fi
          
      - name: Print environment info
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn --version
          echo "Go version:"
          go version
          echo "Python version:"
          python --version
          echo "Node version:"
          node --version || echo "Node not installed"
          echo "Directory structure:"
          ls -la
          
      - name: Make scripts executable
        run: |
          chmod +x bin/rinna-tests.sh
          chmod +x bin/python-quality
          chmod +x api/build.sh || true
          
      - name: Run CI build and test
        env:
          CI: true
        run: |
          ./bin/rinna-tests.sh
        continue-on-error: true
        
      - name: Check build outputs
        run: |
          echo "Checking build artifacts..."
          echo "rinna-core artifacts:"
          ls -la rinna-core/target/ || echo "No rinna-core artifacts found"
          
          echo "rinna-cli artifacts:"
          ls -la rinna-cli/target/ || echo "No rinna-cli artifacts found"
          
          echo "rinna-data-sqlite artifacts:"
          ls -la rinna-data-sqlite/target/ || echo "No rinna-data-sqlite artifacts found"
          
          echo "API artifacts:"
          ls -la api/bin/ || echo "No API artifacts found"
          
          echo "Python artifacts:"
          ls -la python/build/ || echo "No Python build artifacts found"