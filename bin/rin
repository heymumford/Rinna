#!/usr/bin/env bash

#
# rin - Rinna CLI utility
#
# PURPOSE: Command-line utility to simplify Rinna operations with a unified interface
#
# Copyright (c) 2025 Eric C. Mumford (@heymumford)
# This file is subject to the terms and conditions defined in
# the LICENSE file, which is part of this source code package.
# (MIT License)
#

set -e

# Determine project directory
RINNA_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Print error and exit
error() {
  echo -e "${RED}Error: $1${NC}" >&2
  exit 1
}

# Show help text
show_help() {
  cat << EOF
${BLUE}rin${NC} - Rinna CLI utility

Usage: rin [command] [options]

Commands:
  build     Build operations:
    clean         Clean the project
    compile       Compile the source code
    test          Run tests (all tests by default)
    package       Package the application
    all           Clean, compile, test
    
  version   Version management:
    current       Show current version information
    major         Bump major version (x.0.0)
    minor         Bump minor version (0.x.0)
    patch         Bump patch version (0.0.x)
    set <version> Set to specific version
    verify        Verify version consistency
    update        Update all files to match version.properties
    
  doc       Document generation:
    license <key> Set Docmosis license key
    config        Show document configuration
    templates     Show available templates
    generate      Generate documents
  
Test Categories:
  unit            Run unit tests only
  bdd             Run all BDD tests
  workflow        Run workflow BDD tests
  release         Run release BDD tests
  input           Run input interface BDD tests
  api             Run API integration BDD tests
  cli             Run CLI integration BDD tests
  tag:<name>      Run tests with specific tag

Options:
  -v, --verbose   Show detailed output
  -t, --terse     Show minimal output (default)
  -e, --errors    Show only errors
  -h, --help      Show this help message

Examples:
  rin build test                  # Run tests
  rin build all -v                # Clean, compile, test with verbose output
  rin build test workflow         # Run workflow tests
  rin version patch               # Bump patch version
  rin doc license YOUR-KEY        # Set Docmosis license key
EOF
}

# Main execution
if [[ $# -eq 0 ]]; then
  show_help
  exit 0
fi

# First argument is the command category
CATEGORY="$1"
shift

# Dispatch to appropriate tool
case "$CATEGORY" in
  build)
    if [[ -x "$RINNA_DIR/bin/rin-build" ]]; then
      exec "$RINNA_DIR/bin/rin-build" "$@"
    else
      error "bin/rin-build not found or not executable"
    fi
    ;;
  version)
    if [[ -x "$RINNA_DIR/bin/rin-version" ]]; then
      exec "$RINNA_DIR/bin/rin-version" "$@"
    else
      error "bin/rin-version not found or not executable"
    fi
    ;;
  doc|document)
    if [[ -x "$RINNA_DIR/bin/rin-doc" ]]; then
      exec "$RINNA_DIR/bin/rin-doc" "$@"
    else
      error "bin/rin-doc not found or not executable"
    fi
    ;;
  -h|--help)
    show_help
    exit 0
    ;;
  *)
    # For backward compatibility, if the first arg isn't build/version,
    # assume it's a build command
    if [[ -x "$RINNA_DIR/bin/rin-build" ]]; then
      exec "$RINNA_DIR/bin/rin-build" "$CATEGORY" "$@"
    else
      error "bin/rin-build not found or not executable"
    fi
    ;;
esac