#!/bin/bash
# rin-workspace - Manage Rinna workspaces
#
# This command manages Rinna workspaces and projects.

set -e

# Get the project root directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# Source common utilities
if [ -f "$SCRIPT_DIR/common/rinna_utils.sh" ]; then
    source "$SCRIPT_DIR/common/rinna_utils.sh"
else
    # Create a minimal version of utilities if not found
    function echo_info() { echo -e "\033[0;34m$1\033[0m"; }
    function echo_success() { echo -e "\033[0;32m$1\033[0m"; }
    function echo_warning() { echo -e "\033[0;33m$1\033[0m"; }
    function echo_error() { echo -e "\033[0;31m$1\033[0m" >&2; }
    function print_error() { echo -e "\033[0;31m‚úó $1\033[0m" >&2; }
fi

# Default variables
USERNAME=$(whoami)
HOSTNAME=$(hostname)
RINNA_CONFIG_DIR="$HOME/.rinna"
RINNA_CONFIG_FILE="$RINNA_CONFIG_DIR/config.yaml"
RINNA_WORKSPACE_DIR="$PROJECT_ROOT/.rinna"
WORKSPACE_CONFIG_FILE="$RINNA_WORKSPACE_DIR/workspace.yaml"

# Function to show usage
show_usage() {
    cat << EOF
Usage: rin workspace [command] [options]

Manage Rinna workspaces and projects.

Commands:
  status              Show current workspace status (default)
  list                List available workspaces
  create              Create a new workspace
  switch <name>       Switch to a different workspace
  
Options:
  -v, --verbose       Show detailed output
  -h, --help          Show this help message

Examples:
  rin workspace status # Show current workspace status
  rin workspace list   # List available workspaces
  rin workspace create # Create a new workspace
EOF
}

# Handle command and options
COMMAND="status"  # Default command
VERBOSE=0

while [[ $# -gt 0 ]]; do
    case $1 in
        status|list|create)
            COMMAND="$1"
            shift
            ;;
        switch)
            COMMAND="$1"
            if [[ -z "$2" || "$2" == -* ]]; then
                echo_error "Error: switch requires a workspace name"
                exit 1
            fi
            SWITCH_TO="$2"
            shift 2
            ;;
        -v|--verbose)
            VERBOSE=1
            shift
            ;;
        -h|--help)
            show_usage
            exit 0
            ;;
        *)
            echo_error "Error: Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac
done

# Check if Rinna is initialized
if [ ! -f "$RINNA_CONFIG_FILE" ]; then
    echo_error "‚ùå Rinna is not initialized. Please run 'rin init' first."
    exit 1
fi

# Get project name - fallback to directory name if not found in config
PROJECT_NAME=$(basename "$PROJECT_ROOT")
if [ -f "$WORKSPACE_CONFIG_FILE" ]; then
    CONFIG_PROJECT_NAME=$(grep "name:" "$WORKSPACE_CONFIG_FILE" | head -1 | awk '{print $2}' | tr -d '"')
    if [ -n "$CONFIG_PROJECT_NAME" ]; then
        PROJECT_NAME="$CONFIG_PROJECT_NAME"
    fi
fi

# Get workspace creation date - fallback to current date if not found
WORKSPACE_CREATED=$(date +"%Y-%m-%d")
if [ -f "$WORKSPACE_CONFIG_FILE" ]; then
    CONFIG_CREATED=$(grep "created:" "$WORKSPACE_CONFIG_FILE" | head -1 | awk '{print $2}' | tr -d '"')
    if [ -n "$CONFIG_CREATED" ]; then
        WORKSPACE_CREATED=$(echo "$CONFIG_CREATED" | cut -dT -f1)
    fi
fi

# Get workspace owner - fallback to current user if not found
WORKSPACE_OWNER="$USERNAME@$HOSTNAME"
if [ -f "$WORKSPACE_CONFIG_FILE" ]; then
    CONFIG_OWNER=$(grep "owner:" "$WORKSPACE_CONFIG_FILE" | head -1 | awk '{print $2}' | tr -d '"')
    if [ -n "$CONFIG_OWNER" ]; then
        WORKSPACE_OWNER="$CONFIG_OWNER"
    fi
fi

# Count items in workspace
count_items() {
    local workspace_dir="$1"
    if [ -d "$workspace_dir/items" ]; then
        find "$workspace_dir/items" -type f -name "*.json" | wc -l
    else
        echo "0"
    fi
}

# Count items by status
count_items_by_status() {
    local workspace_dir="$1"
    local status="$2"
    
    if [ -d "$workspace_dir/items" ]; then
        grep -l "\"status\": \"$status\"" "$workspace_dir/items"/*.json 2>/dev/null | wc -l
    else
        echo "0"
    fi
}

# Handle different commands
case $COMMAND in
    status)
        # Display workspace status
        echo "üè¢ Workspace Status"
        echo "============================================================="
        echo
        echo "‚úÖ Workspace has been set up for project: $PROJECT_NAME"
        echo "   ‚Ä¢ Location: $RINNA_WORKSPACE_DIR"
        echo "   ‚Ä¢ Created: $WORKSPACE_CREATED"
        echo "   ‚Ä¢ Owner: $WORKSPACE_OWNER"
        echo
        
        # Count items
        TOTAL_ITEMS=$(count_items "$RINNA_WORKSPACE_DIR")
        TODO_ITEMS=$(count_items_by_status "$RINNA_WORKSPACE_DIR" "TODO")
        IN_PROGRESS_ITEMS=$(count_items_by_status "$RINNA_WORKSPACE_DIR" "IN_PROGRESS")
        REVIEW_ITEMS=$(count_items_by_status "$RINNA_WORKSPACE_DIR" "REVIEW")
        DONE_ITEMS=$(count_items_by_status "$RINNA_WORKSPACE_DIR" "DONE")
        
        echo "üìä Workspace Statistics:"
        echo "   ‚Ä¢ $TOTAL_ITEMS work items"
        echo "   ‚Ä¢ $DONE_ITEMS completed items"
        echo "   ‚Ä¢ $((TOTAL_ITEMS - DONE_ITEMS)) pending items"
        
        if [ $VERBOSE -eq 1 ]; then
            echo "   ‚Ä¢ $TODO_ITEMS TODO items"
            echo "   ‚Ä¢ $IN_PROGRESS_ITEMS IN_PROGRESS items"
            echo "   ‚Ä¢ $REVIEW_ITEMS REVIEW items"
        fi
        
        echo
        echo "üîó Project Connection:"
        echo "   ‚Ä¢ Connected to project: $PROJECT_NAME"
        echo "   ‚Ä¢ Project root: $PROJECT_ROOT"
        echo
        echo "üë• Workspace Members:"
        echo "   ‚Ä¢ $USERNAME (owner)"
        ;;
        
    list)
        echo "üìã Available Workspaces"
        echo "============================================================="
        echo
        
        # List workspaces from config
        if [ -f "$RINNA_CONFIG_FILE" ]; then
            WORKSPACES=$(grep -A 20 "projects:" "$RINNA_CONFIG_FILE" | grep "name:" | awk '{print $2}' | tr -d '"')
            
            if [ -z "$WORKSPACES" ]; then
                echo "No workspaces found in configuration."
                echo "Current workspace: $PROJECT_NAME ($PROJECT_ROOT)"
            else
                echo "Workspaces:"
                while read -r WORKSPACE; do
                    if [ "$WORKSPACE" = "$PROJECT_NAME" ]; then
                        echo "   ‚Ä¢ $WORKSPACE (current)"
                    else
                        echo "   ‚Ä¢ $WORKSPACE"
                    fi
                done <<< "$WORKSPACES"
            fi
        else
            echo "No workspaces found in configuration."
            echo "Current workspace: $PROJECT_NAME ($PROJECT_ROOT)"
        fi
        ;;
        
    create)
        echo "üèóÔ∏è Create New Workspace"
        echo "============================================================="
        echo
        echo "To create a new workspace, please use the following syntax:"
        echo
        echo "rin init --project \"Project Name\""
        echo
        echo "This will initialize a new Rinna workspace in your current directory."
        ;;
        
    switch)
        echo "üîÑ Switching Workspace"
        echo "============================================================="
        echo
        echo "Switching workspaces is not yet implemented."
        echo "For now, navigate to the project directory and use Rinna commands there."
        echo
        echo "Each project has its own .rinna directory with workspace configuration."
        ;;
esac

exit 0