<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.rinna</groupId>
  <artifactId>Rinna</artifactId>
  <version>1.9.1</version>
  <name>Rinna</name>
  <packaging>pom</packaging>
  <description>Workflow management system for developers</description>
  <modules>
    <module>rinna-cli</module>
    <module>rinna-core</module>
    <module>rinna-data-sqlite</module>
  </modules>
  <properties>
    <java.version>23</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
  </properties>
  <!-- Dependency management for version consistency -->
  <dependencyManagement>
    <dependencies>
      <!-- JUnit platform suite -->
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-api</artifactId>
        <version>1.13.0-M2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-engine</artifactId>
        <version>1.13.0-M2</version>
        <scope>test</scope>
      </dependency>
      <!-- SQLite for local storage -->
      <dependency>
        <groupId>org.xerial</groupId>
        <artifactId>sqlite-jdbc</artifactId>
        <version>3.49.1.0</version>
      </dependency>
      <!-- Testing dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.13.0-M2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>5.13.0-M2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>5.13.0-M2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>5.17.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>5.17.0</version>
        <scope>test</scope>
      </dependency>
      <!-- Cucumber for BDD testing -->
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit-platform-engine</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-spring</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>4.0.0-M1</version>
        <scope>test</scope>
      </dependency>
      <!-- Logging dependencies -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.1.0-alpha1</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.5.18</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>2.1.0-alpha1</version>
      </dependency>
      <!-- Apache Commons -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.19.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>3.0.0-beta2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.27.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlbeans</groupId>
        <artifactId>xmlbeans</artifactId>
        <version>5.3.0</version>
      </dependency>
      <!-- Kotlin dependencies -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>2.2.0-Beta1</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-common</artifactId>
        <version>2.2.0-Beta1</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk7</artifactId>
        <version>2.2.0-Beta1</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>2.2.0-Beta1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- JUnit platform suite for BDD tests -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- SQLite for local storage -->
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
    </dependency>
    <!-- Testing dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-spring</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <!-- Single unified profile for all development and testing -->
    <profile>
      <id>all-tests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!-- Enable all quality checks -->
        <checkstyle.skip>false</checkstyle.skip>
        <pmd.skip>false</pmd.skip>
        <spotbugs.skip>false</spotbugs.skip>
        <dependency-check.skip>true</dependency-check.skip>
        <enforcer.skip>false</enforcer.skip>
      </properties>
      <build>
        <plugins>
          <!-- JaCoCo configuration -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.11</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Run polyglot coverage reporter after tests -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.1</version>
            <executions>
              <execution>
                <id>polyglot-coverage-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/bin/polyglot-coverage.sh</executable>
                  <arguments>
                    <argument>-o</argument>
                    <argument>html</argument>
                    <argument>-n</argument>
                  </arguments>
                  <successCodes>
                    <successCode>0</successCode>
                    <successCode>1</successCode>
                  </successCodes>
                </configuration>
              </execution>
              <execution>
                <id>generate-c4-diagrams-async</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/bin/generate-diagrams.sh</executable>
                  <workingDirectory>${project.basedir}</workingDirectory>
                  <arguments>
                    <argument>--async</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Set threshold for SpotBugs -->
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Default</effort>
              <threshold>High</threshold>
              <failOnError>true</failOnError>
            </configuration>
          </plugin>
          <!-- Set threshold for PMD -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
              <failOnViolation>false</failOnViolation>
              <printFailingErrors>true</printFailingErrors>
              <failurePriority>1</failurePriority>
              <maxAllowedViolations>1000</maxAllowedViolations>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.feature</include>
          <include>**/*.properties</include>
        </includes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>feature</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>
        <!-- Common assembly plugin configuration -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <!-- Default configuration for assemblies -->
            <appendAssemblyId>true</appendAssemblyId>
            <attach>true</attach>
            <descriptorSourceDirectory>${project.basedir}/src/assembly</descriptorSourceDirectory>
            <!-- Skip parent project assembly as it's a POM-only project -->
            <skipAssembly>true</skipAssembly>
          </configuration>
        </plugin>
        <!-- Quality checks plugins in pluginManagement section -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <configLocation>config/checkstyle/checkstyle.xml</configLocation>
            <suppressionsLocation>config/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <linkXRef>false</linkXRef>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.8.2.0</version>
          <configuration>
            <excludeFilterFile>config/spotbugs/spotbugs-exclude.xml</excludeFilterFile>
            <failOnError>true</failOnError>
            <effort>Max</effort>
            <threshold>Medium</threshold>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.21.2</version>
          <configuration>
            <linkXRef>false</linkXRef>
            <failOnViolation>false</failOnViolation>
            <printFailingErrors>true</printFailingErrors>
            <rulesets>
              <ruleset>${project.basedir}/config/pmd/pmd-ruleset.xml</ruleset>
            </rulesets>
            <!-- Use JDK 21 for PMD analysis while keeping Java 23 for compilation -->
            <targetJdk>21</targetJdk>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>9.0.9</version>
          <configuration>
            <failBuildOnCVSS>8</failBuildOnCVSS>
            <suppressionFile>config/owasp/suppressions.xml</suppressionFile>
            <!-- Better performance settings -->
            <nvdApiDelay>1000</nvdApiDelay>
            <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
            <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
            <ossindexAnalyzerEnabled>false</ossindexAnalyzerEnabled>
            <!-- Output settings -->
            <formats>
              <format>HTML</format>
              <format>JSON</format>
            </formats>
            <outputDirectory>${project.build.directory}/dependency-check</outputDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.44.4</version>
          <configuration>
            <java>
              <importOrder>
                <order>java,javax,org,com</order>
              </importOrder>
              <removeUnusedImports/>
              <formatAnnotations/>
            </java>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-test-resources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.12.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <fork>true</fork>
          <release>${java.version}</release>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <testSource>${java.version}</testSource>
          <testTarget>${java.version}</testTarget>
        </configuration>
        <!-- Skip test compilation in the parent project -->
        <executions>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <skip>true</skip>
              <testExcludes>
                <exclude>**/*.java</exclude>
              </testExcludes>
            </configuration>
          </execution>
          <execution>
            <id>default-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <skipMain>true</skipMain>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Automatically run quality checks -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <id>validate-checkstyle</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <effort>Low</effort>
          <threshold>High</threshold>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>spotbugs-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
          <skipEmptyReport>true</skipEmptyReport>
          <!-- Higher number means more permissive -->
          <maxAllowedViolations>1000</maxAllowedViolations>
          <failurePriority>1</failurePriority>
        </configuration>
        <executions>
          <execution>
            <id>pmd-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- OWASP Dependency Check - Skipped by default unless CI profile is active -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <!-- Skip by default in local dev - only run in CI -->
          <skip>true</skip>
        </configuration>
      </plugin>
      <!-- JaCoCo configuration is in the jacoco profile -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <includes>
            <!-- Standardized test structure -->
            <include>**/unit/**/*Test.java</include>
            <include>**/component/**/*ComponentTest.java</include>
            <include>**/integration/**/*IntegrationTest.java</include>
            <include>**/acceptance/**/*AcceptanceTest.java</include>
            <include>**/acceptance/**/*Runner.java</include>
            <include>**/performance/**/*PerformanceTest.java</include>
            <!-- Legacy test patterns -->
            <include>**/bdd/NewUserAuth*.java</include>
            <include>**/bdd/WorkItem*.java</include>
            <include>**/*Test.java</include>
          </includes>
          <properties>
            <!-- Parallel execution for JUnit Jupiter tests -->
            <configurationParameters>
              junit.jupiter.execution.parallel.enabled=true
              junit.jupiter.execution.parallel.mode.default=same_thread
              junit.jupiter.execution.parallel.mode.classes.default=concurrent
              junit.jupiter.execution.parallel.config.strategy=dynamic
              junit.jupiter.execution.parallel.config.dynamic.factor=0.5
            </configurationParameters>
          </properties>
          <systemPropertyVariables>
            <java.awt.headless>true</java.awt.headless>
            <cucumber.junit-platform.naming-strategy>long</cucumber.junit-platform.naming-strategy>
            <cucumber.publish.quiet>true</cucumber.publish.quiet>
            <cucumber.glue>org.rinna.acceptance.bdd,org.rinna.bdd</cucumber.glue>
            <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
          </systemPropertyVariables>
          <argLine>-XX:+EnableDynamicAgentLoading</argLine>
          <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
        </configuration>
        <dependencies>
          <!-- JUnit platform dependencies for surefire -->
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <version>1.13.0-M2</version>
          </dependency>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <version>1.13.0-M2</version>
          </dependency>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.13.0-M2</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
      <!-- Maven minimum version enforcer -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.9.0</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Skip parent install plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.44.4</version>
      </plugin>
    </plugins>
  </build>
</project>
