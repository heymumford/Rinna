<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.rinna</groupId>
  <artifactId>Rinna</artifactId>
  <version>1.8.7</version>
  <name>Rinna</name>
  <packaging>pom</packaging>
  <description>Workflow management system for developers</description>
  <modules>
    <module>rinna-cli</module>
    <module>rinna-core</module>
    <module>rinna-data-sqlite</module>
  </modules>
  <properties>
    <java.version>21</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
  </properties>
  <!-- Dependency management for version consistency -->
  <dependencyManagement>
    <dependencies>
      <!-- JUnit platform suite -->
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-api</artifactId>
        <version>1.10.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-engine</artifactId>
        <version>1.10.2</version>
        <scope>test</scope>
      </dependency>
      <!-- SQLite for local storage -->
      <dependency>
        <groupId>org.xerial</groupId>
        <artifactId>sqlite-jdbc</artifactId>
        <version>3.49.1.0</version>
      </dependency>
      <!-- Testing dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.10.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>5.10.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>5.10.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>5.17.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>5.17.0</version>
        <scope>test</scope>
      </dependency>
      <!-- Cucumber for BDD testing -->
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit-platform-engine</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-spring</artifactId>
        <version>7.22.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.25.3</version>
        <scope>test</scope>
      </dependency>
      <!-- Logging dependencies -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.12</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.4.14</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>2.0.12</version>
      </dependency>
      <!-- Apache Commons -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.18.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>2.24.3</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.27.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlbeans</groupId>
        <artifactId>xmlbeans</artifactId>
        <version>5.3.0</version>
      </dependency>
      <!-- Kotlin dependencies -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>1.9.10</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-common</artifactId>
        <version>1.9.10</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk7</artifactId>
        <version>1.9.10</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>1.9.10</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- JUnit platform suite for BDD tests -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- SQLite for local storage -->
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
    </dependency>
    <!-- Testing dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Note: We can't add rinna-core dependency here due to circular dependency issues -->
    <!-- As a workaround, we'll skip tests in the parent project -->
    <!-- Cucumber for BDD testing -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-spring</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <!-- Test category profiles -->
    <profile>
      <id>unit-tests</id>
      <properties>
        <test.groups>unit</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>unit</groups>
              <excludedGroups>component,integration,acceptance,performance</excludedGroups>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>component-tests</id>
      <properties>
        <test.groups>component</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>component</groups>
              <excludedGroups>unit,integration,acceptance,performance</excludedGroups>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>integration-tests</id>
      <properties>
        <test.groups>integration</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>integration</groups>
              <excludedGroups>unit,component,acceptance,performance</excludedGroups>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>acceptance-tests</id>
      <properties>
        <test.groups>acceptance</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>acceptance</groups>
              <excludedGroups>unit,component,integration,performance</excludedGroups>
              <includes>
                <include>**/*Runner.java</include>
              </includes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>performance-tests</id>
      <properties>
        <test.groups>performance</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>performance</groups>
              <excludedGroups>unit,component,integration,acceptance</excludedGroups>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Profile to run CLI, Go API, and Python tests -->
    <profile>
      <id>cross-language-tests</id>
      <!-- Comment: Runs cross-language polyglot tests that integrate Java, Go, and Python components.
        Uses the polyglot test harness to ensure proper isolation and coordination between
        components written in different languages. -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>run-cli-go-python-tests</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/bin/maven-cross-tests.sh</executable>
                  <workingDirectory>${project.basedir}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Profile to generate architecture diagrams -->
    <profile>
      <id>diagrams</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>generate-c4-diagrams</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/bin/generate-diagrams.sh</executable>
                  <workingDirectory>${project.basedir}</workingDirectory>
                  <!-- Run synchronously during explicit diagram generation -->
                  <arguments>
                    <argument>--clean</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>all-tests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <!-- Disable cross-language tests for now -->
              <!--
                            <execution>
                                <id>run-all-language-tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/bin/maven-cross-tests.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                            -->
              <execution>
                <id>generate-c4-diagrams-async</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/bin/generate-diagrams.sh</executable>
                  <workingDirectory>${project.basedir}</workingDirectory>
                  <!-- Run asynchronously during normal builds -->
                  <arguments>
                    <argument>--async</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Default profile that adds JaCoCo coverage -->
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.11</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.70</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- SOX compliance profile for financial institution requirements -->
    <profile>
      <id>sox-compliance</id>
      <build>
        <plugins>
          <!-- OWASP Dependency Check with stricter settings -->
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <failBuildOnCVSS>7</failBuildOnCVSS>
              <suppressionFile>config/owasp/suppressions.xml</suppressionFile>
              <formats>
                <format>HTML</format>
                <format>XML</format>
                <format>JSON</format>
              </formats>
            </configuration>
          </plugin>
          <!-- Enforcer rules for SOX compliance -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.4.1</version>
            <executions>
              <execution>
                <id>enforce-sox-rules</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[21,)</version>
                    </requireJavaVersion>
                    <requireMavenVersion>
                      <version>[3.8.0,)</version>
                    </requireMavenVersion>
                    <dependencyConvergence/>
                    <banDuplicatePomDependencyVersions/>
                    <banVulnerableDependencies>
                      <level>HIGH</level>
                    </banVulnerableDependencies>
                  </rules>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.kordamp.maven</groupId>
                <artifactId>pomchecker-enforcer-rules</artifactId>
                <version>1.10.3</version>
              </dependency>
            </dependencies>
          </plugin>
          <!-- Stricter PMD rules for SOX -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
              <failOnViolation>false</failOnViolation>
              <printFailingErrors>true</printFailingErrors>
              <maxAllowedViolations>100</maxAllowedViolations>
              <rulesets>
                <ruleset>/category/java/bestpractices.xml</ruleset>
                <ruleset>/category/java/security.xml</ruleset>
                <ruleset>/category/java/errorprone.xml</ruleset>
                <ruleset>/category/java/multithreading.xml</ruleset>
              </rulesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Disable quality checks profile (for faster builds when needed) -->
    <profile>
      <id>skip-quality</id>
      <properties>
        <checkstyle.skip>true</checkstyle.skip>
        <pmd.skip>true</pmd.skip>
        <spotbugs.skip>true</spotbugs.skip>
        <dependency-check.skip>true</dependency-check.skip>
        <enforcer.skip>true</enforcer.skip>
      </properties>
    </profile>
    <!-- Local quality gates profile -->
    <profile>
      <id>local-quality</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!-- Enable style and basic code checks -->
        <checkstyle.skip>false</checkstyle.skip>
        <pmd.skip>false</pmd.skip>
        <spotbugs.skip>false</spotbugs.skip>
        <!-- Skip security checks by default locally -->
        <dependency-check.skip>true</dependency-check.skip>
        <enforcer.skip>false</enforcer.skip>
      </properties>
      <build>
        <plugins>
          <!-- Set local threshold for SpotBugs -->
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Default</effort>
              <threshold>High</threshold>
              <failOnError>true</failOnError>
            </configuration>
          </plugin>
          <!-- Set local threshold for PMD -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
              <failOnViolation>false</failOnViolation>
              <printFailingErrors>true</printFailingErrors>
              <failurePriority>1</failurePriority>
              <maxAllowedViolations>1000</maxAllowedViolations>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- CI profile for Continuous Integration environment -->
    <profile>
      <id>ci</id>
      <properties>
        <!-- Enable all quality checks -->
        <checkstyle.skip>false</checkstyle.skip>
        <pmd.skip>false</pmd.skip>
        <spotbugs.skip>false</spotbugs.skip>
        <dependency-check.skip>false</dependency-check.skip>
        <enforcer.skip>false</enforcer.skip>
      </properties>
      <build>
        <plugins>
          <!-- Stricter SpotBugs settings for CI -->
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Max</effort>
              <threshold>Medium</threshold>
              <failOnError>true</failOnError>
            </configuration>
          </plugin>
          <!-- Stricter PMD settings for CI -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
              <failOnViolation>false</failOnViolation>
              <printFailingErrors>true</printFailingErrors>
              <failurePriority>2</failurePriority>
              <maxAllowedViolations>200</maxAllowedViolations>
            </configuration>
          </plugin>
          <!-- Enable OWASP dependency check in CI -->
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <configuration>
              <skip>false</skip>
              <failBuildOnCVSS>7</failBuildOnCVSS>
              <suppressionFile>config/owasp/suppressions.xml</suppressionFile>
            </configuration>
            <executions>
              <execution>
                <id>owasp-check-ci</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Enforce stricter rules in CI -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-ci-rules</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[21,)</version>
                    </requireJavaVersion>
                    <requireMavenVersion>
                      <version>[3.8.0,)</version>
                    </requireMavenVersion>
                    <dependencyConvergence/>
                    <banDuplicatePomDependencyVersions/>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Local CI testing profile - note: use bin/run-ci-local.sh instead
             This profile is kept simple as a reminder of how to run local CI testing -->
    <profile>
      <id>ci-local</id>
      <properties>
        <dependency-check.skip>true</dependency-check.skip>
        <skipTests>false</skipTests>
      </properties>
    </profile>
    <!-- Profile to run smoke tests -->
    <profile>
      <id>smoke-tests</id>
      <properties>
        <test.groups>smoke</test.groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>smoke</groups>
              <skipTests>false</skipTests>
              <skip>false</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Profile for polyglot code coverage -->
    <profile>
      <id>polyglot-coverage</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!-- JaCoCo configuration -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.11</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Run polyglot coverage reporter after tests -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>polyglot-coverage-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/bin/polyglot-coverage.sh</executable>
                  <arguments>
                    <argument>-o</argument>
                    <argument>html</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Profile to run architecture validation checks -->
    <profile>
      <id>validate-architecture</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>run-architecture-checks</id>
                <phase>validate</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${session.executionRootDirectory}/bin/run-checks.sh</executable>
                  <workingDirectory>${session.executionRootDirectory}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.feature</include>
          <include>**/*.properties</include>
        </includes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>feature</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>
        <!-- Common assembly plugin configuration -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <!-- Default configuration for assemblies -->
            <appendAssemblyId>true</appendAssemblyId>
            <attach>true</attach>
            <descriptorSourceDirectory>${project.basedir}/src/assembly</descriptorSourceDirectory>
            <!-- Skip parent project assembly as it's a POM-only project -->
            <skipAssembly>${project.packaging == 'pom'}</skipAssembly>
          </configuration>
        </plugin>
        <!-- Quality checks plugins in pluginManagement section -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <configLocation>config/checkstyle/checkstyle.xml</configLocation>
            <suppressionsLocation>config/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <linkXRef>false</linkXRef>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.9.3.0</version>
          <configuration>
            <excludeFilterFile>config/spotbugs/spotbugs-exclude.xml</excludeFilterFile>
            <failOnError>true</failOnError>
            <effort>Max</effort>
            <threshold>Medium</threshold>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.26.0</version>
          <configuration>
            <linkXRef>false</linkXRef>
            <failOnViolation>false</failOnViolation>
            <printFailingErrors>true</printFailingErrors>
            <rulesets>
              <ruleset>${project.basedir}/config/pmd/pmd-ruleset.xml</ruleset>
            </rulesets>
            <!-- Use JDK 22 target language to handle string templates -->
            <targetJdk>22</targetJdk>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>12.1.1</version>
          <configuration>
            <failBuildOnCVSS>8</failBuildOnCVSS>
            <suppressionFile>config/owasp/suppressions.xml</suppressionFile>
            <!-- Better performance settings -->
            <nvdApiDelay>1000</nvdApiDelay>
            <skipUpdateCheck>false</skipUpdateCheck>
            <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
            <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
            <nodejsAuditAnalyzerEnabled>false</nodejsAuditAnalyzerEnabled>
            <ossindexAnalyzerEnabled>false</ossindexAnalyzerEnabled>
            <!-- Cache settings -->
            <cacheFolder>${user.home}/.dependency-check/data</cacheFolder>
            <dataMirroringEnabled>true</dataMirroringEnabled>
            <dataMirroringRetentionDays>30</dataMirroringRetentionDays>
            <!-- Output settings -->
            <formats>
              <format>HTML</format>
              <format>JSON</format>
            </formats>
            <outputDirectory>${project.build.directory}/dependency-check</outputDirectory>
          </configuration>
        </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-test-resources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <fork>true</fork>
          <release>${java.version}</release>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <!-- Removed preview flag to fix string template warnings -->
          </compilerArgs>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <testSource>${java.version}</testSource>
          <testTarget>${java.version}</testTarget>
          <skipTests>false</skipTests>
          <skip>false</skip>
        </configuration>
        <!-- Skip test compilation in the parent project -->
        <executions>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <skip>true</skip>
              <skipTests>true</skipTests>
              <testExcludes>
                <exclude>**/*.java</exclude>
              </testExcludes>
            </configuration>
          </execution>
          <execution>
            <id>default-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <skipMain>true</skipMain>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Automatically run quality checks -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <id>validate-checkstyle</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <effort>Low</effort>
          <threshold>High</threshold>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>spotbugs-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
          <skipEmptyReport>true</skipEmptyReport>
          <!-- Higher number means more permissive -->
          <maxAllowedViolations>1000</maxAllowedViolations>
          <failurePriority>1</failurePriority>
        </configuration>
        <executions>
          <execution>
            <id>pmd-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- OWASP Dependency Check - Skipped by default unless CI profile is active -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <!-- Skip by default in local dev - only run in CI -->
          <skip>true</skip>
        </configuration>
      </plugin>
      <!-- JaCoCo configuration is in the jacoco profile -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <!-- Skip tests in the parent project but allow modules to run tests -->
          <skipTests>${maven.test.skip}</skipTests>
          <skip>${maven.test.skip}</skip>
          <includes>
            <!-- Standardized test structure -->
            <include>**/unit/**/*Test.java</include>
            <include>**/component/**/*ComponentTest.java</include>
            <include>**/integration/**/*IntegrationTest.java</include>
            <include>**/acceptance/**/*AcceptanceTest.java</include>
            <include>**/acceptance/**/*Runner.java</include>
            <include>**/performance/**/*PerformanceTest.java</include>
            <!-- Legacy test patterns -->
            <include>**/bdd/NewUserAuth*.java</include>
            <include>**/bdd/WorkItem*.java</include>
            <include>**/*Test.java</include>
          </includes>
          <properties>
            <!-- Parallel execution for JUnit Jupiter tests -->
            <configurationParameters>
                            junit.jupiter.execution.parallel.enabled=true
                            junit.jupiter.execution.parallel.mode.default=same_thread
                            junit.jupiter.execution.parallel.mode.classes.default=concurrent
                            junit.jupiter.execution.parallel.config.strategy=dynamic
                            junit.jupiter.execution.parallel.config.dynamic.factor=0.5
                        </configurationParameters>
          </properties>
          <systemPropertyVariables>
            <java.awt.headless>true</java.awt.headless>
            <cucumber.junit-platform.naming-strategy>long</cucumber.junit-platform.naming-strategy>
            <cucumber.publish.quiet>true</cucumber.publish.quiet>
            <cucumber.glue>org.rinna.acceptance.bdd,org.rinna.bdd</cucumber.glue>
            <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
          </systemPropertyVariables>
          <argLine>-XX:+EnableDynamicAgentLoading</argLine>
          <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
        </configuration>
        <dependencies>
          <!-- JUnit platform dependencies for surefire -->
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <version>1.10.2</version>
          </dependency>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <version>1.10.2</version>
          </dependency>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.2</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
      <!-- Maven minimum version enforcer -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Skip parent install plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
            <configuration>
              <java>
                <importOrder>
                  <order>java,javax,org,com</order>
                </importOrder>
                <removeUnusedImports />
                <formatAnnotations />
              </java>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
    </plugins>
  </build>
</project>
