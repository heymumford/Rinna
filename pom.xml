<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>org.rinna</groupId>
    <artifactId>Rinna</artifactId>
    <version>1.6.1</version>
    <name>Rinna</name>
    <packaging>pom</packaging>
    <description>Workflow management system for developers</description>
    
    <modules>
        <module>rinna-cli</module>
        <module>rinna-core</module>
    </modules>
    
    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- SQLite for local storage -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.49.1.0</version>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.17.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.17.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Cucumber for BDD testing -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>7.22.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>7.22.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>7.22.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.25.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Test category profiles -->
        <profile>
            <id>unit-tests</id>
            <properties>
                <test.groups>unit</test.groups>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>unit</groups>
                            <excludedGroups>component,integration,acceptance,performance</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>component-tests</id>
            <properties>
                <test.groups>component</test.groups>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>component</groups>
                            <excludedGroups>unit,integration,acceptance,performance</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>integration-tests</id>
            <properties>
                <test.groups>integration</test.groups>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>integration</groups>
                            <excludedGroups>unit,component,acceptance,performance</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>acceptance-tests</id>
            <properties>
                <test.groups>acceptance</test.groups>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>acceptance</groups>
                            <excludedGroups>unit,component,integration,performance</excludedGroups>
                            <includes>
                                <include>**/*Runner.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>performance-tests</id>
            <properties>
                <test.groups>performance</test.groups>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>performance</groups>
                            <excludedGroups>unit,component,integration,acceptance</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Profile to run CLI, Go API, and Python tests -->
        <profile>
            <id>cross-language-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>run-cli-go-python-tests</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/bin/maven-cross-tests.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Profile to generate architecture diagrams -->
        <profile>
            <id>diagrams</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>generate-c4-diagrams</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/bin/generate-diagrams.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <!-- Run synchronously during explicit diagram generation -->
                                    <arguments>
                                        <argument>--clean</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>all-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>run-all-language-tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/bin/maven-cross-tests.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-c4-diagrams-async</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/bin/generate-diagrams.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <!-- Run asynchronously during normal builds -->
                                    <arguments>
                                        <argument>--async</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Default profile that adds JaCoCo coverage -->
        <profile>
            <id>jacoco</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.11</version>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.70</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- SOX compliance profile for financial institution requirements -->
        <profile>
            <id>sox-compliance</id>
            <build>
                <plugins>
                    <!-- OWASP Dependency Check with stricter settings -->
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <failBuildOnCVSS>7</failBuildOnCVSS>
                            <suppressionFile>config/owasp/suppressions.xml</suppressionFile>
                            <formats>
                                <format>HTML</format>
                                <format>XML</format>
                                <format>JSON</format>
                            </formats>
                        </configuration>
                    </plugin>
                    
                    <!-- Enforcer rules for SOX compliance -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>3.4.1</version>
                        <executions>
                            <execution>
                                <id>enforce-sox-rules</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireJavaVersion>
                                            <version>[21,)</version>
                                        </requireJavaVersion>
                                        <requireMavenVersion>
                                            <version>[3.8.0,)</version>
                                        </requireMavenVersion>
                                        <dependencyConvergence/>
                                        <banDuplicatePomDependencyVersions/>
                                        <banVulnerableDependencies>
                                            <level>HIGH</level>
                                        </banVulnerableDependencies>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.kordamp.maven</groupId>
                                <artifactId>pomchecker-enforcer-rules</artifactId>
                                <version>1.10.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    
                    <!-- Stricter PMD rules for SOX -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <configuration>
                            <failOnViolation>false</failOnViolation>
                            <printFailingErrors>true</printFailingErrors>
                            <rulesets>
                                <ruleset>/category/java/bestpractices.xml</ruleset>
                                <ruleset>/category/java/security.xml</ruleset>
                                <ruleset>/category/java/errorprone.xml</ruleset>
                                <ruleset>/category/java/multithreading.xml</ruleset>
                            </rulesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Disable quality checks profile (for faster builds when needed) -->
        <profile>
            <id>skip-quality</id>
            <properties>
                <checkstyle.skip>true</checkstyle.skip>
                <pmd.skip>true</pmd.skip>
                <spotbugs.skip>true</spotbugs.skip>
                <dependency-check.skip>true</dependency-check.skip>
                <enforcer.skip>true</enforcer.skip>
            </properties>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.feature</include>
                    <include>**/*.properties</include>
                </includes>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                    <configuration>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>feature</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <!-- Quality checks plugins in pluginManagement section -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <configLocation>config/checkstyle/checkstyle.xml</configLocation>
                        <suppressionsLocation>config/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <linkXRef>false</linkXRef>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>4.9.3.0</version>
                    <configuration>
                        <excludeFilterFile>config/spotbugs/spotbugs-exclude.xml</excludeFilterFile>
                        <failOnError>true</failOnError>
                        <effort>Max</effort>
                        <threshold>Medium</threshold>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.26.0</version>
                    <configuration>
                        <linkXRef>false</linkXRef>
                        <failOnViolation>false</failOnViolation>
                        <printFailingErrors>true</printFailingErrors>
                        <rulesets>
                            <ruleset>${project.basedir}/config/pmd/pmd-ruleset.xml</ruleset>
                        </rulesets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>12.1.1</version>
                    <configuration>
                        <failBuildOnCVSS>8</failBuildOnCVSS>
                        <suppressionFile>config/owasp/suppressions.xml</suppressionFile>
                        <!-- Use offline mode for demo purposes -->
                        <nvdApiDelay>4000</nvdApiDelay>
                        <skipUpdateCheck>true</skipUpdateCheck>
                        <cveUrlModified>https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz</cveUrlModified>
                        <cveUrlBase>https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-%d.json.gz</cveUrlBase>
                        <cveWaitTime>1000</cveWaitTime>
                        <ossindexAnalyzerEnabled>false</ossindexAnalyzerEnabled>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-test-resources</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <fork>true</fork>
                    <release>${java.version}</release>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                        <arg>--enable-preview</arg>
                    </compilerArgs>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <testSource>${java.version}</testSource>
                    <testTarget>${java.version}</testTarget>
                    <skipTests>false</skipTests>
                    <skip>false</skip>
                </configuration>
                <!-- Force test compilation -->
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Automatically run quality checks -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate-checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>spotbugs-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pmd-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- OWASP Dependency Check -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <executions>
                    <execution>
                        <id>owasp-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- JaCoCo configuration is in the jacoco profile -->
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <skipTests>false</skipTests>
                    <skip>false</skip>
                    <includes>
                        <include>**/bdd/NewUserAuth*.java</include>
                        <include>**/bdd/WorkItem*.java</include>
                    </includes>
                    <properties>
                        <!-- Parallel execution for JUnit Jupiter tests -->
                        <configurationParameters>
                            junit.jupiter.execution.parallel.enabled=true
                            junit.jupiter.execution.parallel.mode.default=same_thread
                            junit.jupiter.execution.parallel.mode.classes.default=concurrent
                            junit.jupiter.execution.parallel.config.strategy=dynamic
                            junit.jupiter.execution.parallel.config.dynamic.factor=0.5
                        </configurationParameters>
                    </properties>
                    <systemPropertyVariables>
                        <java.awt.headless>true</java.awt.headless>
                        <cucumber.junit-platform.naming-strategy>long</cucumber.junit-platform.naming-strategy>
                        <cucumber.publish.quiet>true</cucumber.publish.quiet>
                        <cucumber.glue>org.rinna.bdd</cucumber.glue>
                    </systemPropertyVariables>
                    <argLine>-XX:+EnableDynamicAgentLoading --enable-preview</argLine>
                    <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>5.10.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
            
            <!-- Maven minimum version enforcer -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Create executable JAR with dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.rinna.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <finalName>rinna-cli</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
