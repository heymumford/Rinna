[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "rinna"
version = "1.6.3"
description = "Rinna Python package"
authors = [
    {name = "Eric C. Mumford (@heymumford)"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13.3,<3.14"
dependencies = [
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "typer>=0.9.0",
    "rich>=13.4.1",
    "tqdm>=4.65.0",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[project.urls]
Repository = "https://github.com/heymumford/Rinna"

[project.optional-dependencies]
docs = [
    "sphinx>=7.0.0",
    "mkdocs>=1.5.0",
]
web = [
    "fastapi>=0.95.0",
    "uvicorn>=0.21.0",
    "pydantic>=1.10.7",
]
reports = [
    "weasyprint>=53.0",
    "reportlab>=3.6.0",
    "jinja2>=3.0.0",
    "pillow>=9.0.0",
    "pdf2image>=1.16.0",
    "xhtml2pdf>=0.2.8",
]
diagrams = [
    "diagrams>=0.23.3",
    "graphviz>=0.20.1",
]
all = [
    "diagrams>=0.23.3",
    "graphviz>=0.20.1",
    "weasyprint>=53.0",
    "reportlab>=3.6.0",
    "jinja2>=3.0.0",
    "pillow>=9.0.0",
    "pdf2image>=1.16.0",
    "xhtml2pdf>=0.2.8",
    "fastapi>=0.95.0",
    "uvicorn>=0.21.0",
    "pydantic>=1.10.7",
    "sphinx>=7.0.0",
    "mkdocs>=1.5.0",
]

[project.scripts]
rinna = "rinna.cli:main"

[tool.poetry]
name = "rinna"
version = "1.6.3"
packages = [
    {include = "rinna"},
    {include = "lucidchart_py"}
]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
mypy = ">=1.0.0"
black = ">=23.0.0"
flake8 = ">=6.0.0"
isort = ">=5.12.0"
pylint = ">=2.17.0"
pytest-cov = ">=4.1.0"
pre-commit = ">=3.3.1"

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: mark a test as a unit test",
    "component: mark a test as a component test",
    "integration: mark a test as an integration test",
    "acceptance: mark a test as an acceptance test",
    "performance: mark a test as a performance test",
    "benchmark: mark a test for performance benchmarking"
]

[tool.pylint]
max-line-length = 88
extension-pkg-whitelist = "pydantic"
disable = [
    "C0103", 
    "C0111", 
    "R0903", 
    "R0913", 
    "W0511"
]
ignore = [
    "conf.py",
    "conftest.py"
]
ignore-paths = [
    "./.venv",
    "./tests"
]
good-names = [
    "i", "j", "k", "ex", "Run", "_", "id", "f"
]

[tool.mypy]
python_version = "3.13.3"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "weasyprint.*",
    "reportlab.*",
    "xhtml2pdf.*",
    "pdf2image.*",
    "PIL.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "rinna.reports.reportlab_renderer",
    "rinna.reports.service"
]
ignore_errors = true

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312", "py313"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.coverage.run]
source = ["rinna"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

